import {Icons} from '../assets/icons';

const DEFAULT_ICON = Icons.IconHome || '';

// Mapping cho furniture options v·ªõi icons th·∫≠t
export const furnitureMapping: Record<string, {label: string; icon: string}> = {
  dieuHoa: {label: 'ƒêi·ªÅu h√≤a', icon: Icons.IconDieuHoaSelectd || DEFAULT_ICON},
  mayNuocNong: {label: 'M√°y n∆∞·ªõc n√≥ng', icon: Icons.IconBinhNongLanhSelectd || DEFAULT_ICON},
  tuLanh: {label: 'T·ªß l·∫°nh', icon: Icons.IconFridgeSelectd || DEFAULT_ICON},
  mayGiat: {label: 'M√°y gi·∫∑t', icon: Icons.IconMayGiatSelectd || DEFAULT_ICON},
  quatTran: {label: 'Qu·∫°t tr·∫ßn', icon: Icons.IconCeilingFanSelectd || DEFAULT_ICON},
  giuongNgu: {label: 'Gi∆∞·ªùng ng·ªß', icon: Icons.IconGiuongNguSelectd || DEFAULT_ICON},
  tuQuanAo: {label: 'T·ªß qu·∫ßn √°o', icon: Icons.IconTuQuanAoSelectd || DEFAULT_ICON},
  banGhe: {label: 'B√†n gh·∫ø', icon: Icons.IconTableChairSelectd || DEFAULT_ICON},
  keBep: {label: 'K·ªá b·∫øp', icon: Icons.IconKeBepSelectd || DEFAULT_ICON},
  sofa: {label: 'Sofa', icon: Icons.IconChairSelectd || DEFAULT_ICON},
  guong: {label: 'G∆∞∆°ng', icon: Icons.IconGuongSelectd || DEFAULT_ICON},
  remCua: {label: 'R√®m c·ª≠a', icon: Icons.IconCurtainsSelectd || DEFAULT_ICON},
  doGiaDung: {label: 'ƒê·ªì gia d·ª•ng', icon: Icons.IconDoGiaDungDefault|| DEFAULT_ICON},
  chanGaGoi: {label: 'ChƒÉn ga g·ªëi', icon: Icons.IconBlanketSelectd || DEFAULT_ICON},
  khac: {label: 'Kh√°c', icon: DEFAULT_ICON},
};

// Mapping cho service options v·ªõi icons th·∫≠t
export const serviceMapping = {
  electricity: { label: 'ƒêi·ªán', icon: Icons.IconElectricalDefault || DEFAULT_ICON },
  water: { label: 'N∆∞·ªõc', icon: Icons.IconWarterDropDefault || DEFAULT_ICON },
  cleaning: { label: 'D·ªãch v·ª•', icon: Icons.IconServiceDefault || DEFAULT_ICON },
  parking: { label: 'G·ª≠i xe', icon: Icons.IconSacXeSelectd || DEFAULT_ICON },
  internet: { label: 'Internet', icon: Icons.IconWifiSelectd || DEFAULT_ICON },
  elevator: { label: 'Thang m√°y', icon: Icons.IconThangMaySelectd || DEFAULT_ICON },
  security: { label: 'B·∫£o v·ªá', icon: Icons.IconSecuritySelectd || DEFAULT_ICON },
  wifi: { label: 'Wifi', icon: Icons.IconWifiSelectd || DEFAULT_ICON },
  pet: { label: 'Nu√¥i pet', icon: Icons.IconPetSelectd || DEFAULT_ICON },
  other: { label: 'Kh√°c', icon: DEFAULT_ICON },
};

// Mapping cho amenities options v·ªõi icons th·∫≠t
export const amenitiesMapping: Record<string, {label: string; icon: string}> = {
  vsKhepKin: {label: 'V·ªá sinh kh√©p k√≠n', icon: Icons.IconToiletSelectd || DEFAULT_ICON},
  vsChung: {label: 'V·ªá sinh chung', icon: Icons.IconToiletSelectd || DEFAULT_ICON},
  gacXep: {label: 'G√°c x√©p', icon: Icons.IconGacXepSelectd || DEFAULT_ICON},
  banCong: {label: 'Ban c√¥ng', icon: Icons.IconRoomsBalconySelectd || DEFAULT_ICON},
  thangMay: {label: 'Thang m√°y', icon: Icons.IconThangMaySelectd || DEFAULT_ICON},
  baoVe247: {label: 'B·∫£o v·ªá 24/7', icon: Icons.IconSecuritySelectd || DEFAULT_ICON},
  guiXeDien: {label: 'G·ª≠i xe ƒëi·ªán', icon: Icons.IconSacXeSelectd || DEFAULT_ICON},
  guiXeMay: {label: 'G·ª≠i xe m√°y', icon: Icons.IconSacXeSelectd || DEFAULT_ICON},
  guiXeOto: {label: 'G·ª≠i xe √¥ t√¥', icon: Icons.IconSacXeSelectd || DEFAULT_ICON},
  nuoiPet: {label: 'Nu√¥i pet', icon: Icons.IconPetSelectd || DEFAULT_ICON},
  gioLinhHoat: {label: 'Gi·ªù linh ho·∫°t', icon: Icons.IconAccessTimeSelectd || DEFAULT_ICON},
  khongChungChu: {
    label: 'Kh√¥ng chung ch·ªß',
    icon: Icons.IconPersonSelectd || DEFAULT_ICON,
  },
  raVaoVanTay: {label: 'Ra v√†o v√¢n tay', icon: Icons.IconSecuritySelectd || DEFAULT_ICON},
  wifiFree: {label: 'Wifi mi·ªÖn ph√≠', icon: Icons.IconWifiSelectd || DEFAULT_ICON},
  wifiTraPhi: {label: 'Wifi tr·∫£ ph√≠', icon: Icons.IconWifiSelectd || DEFAULT_ICON},
  khac: {label: 'Kh√°c', icon: DEFAULT_ICON},
};

// Function ƒë·ªÉ get icon cho furniture/amenity
export const getItemIcon = (
  type: 'furniture' | 'amenity',
  value: string,
): string => {
  if (type === 'furniture') {
    return furnitureMapping[value]?.icon || 'üì¶';
  } else {
    return amenitiesMapping[value]?.icon || 'üì¶';
  }
};

// Function ƒë·ªÉ get label cho furniture/amenity
export const getItemLabel = (
  type: 'furniture' | 'amenity',
  value: string,
): string => {
  if (type === 'furniture') {
    return furnitureMapping[value]?.label || value;
  } else {
    return amenitiesMapping[value]?.label || value;
  }
};
